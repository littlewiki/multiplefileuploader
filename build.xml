<project name="mfu-project" default="deploy" basedir=".">
<!-- <taskdef resource="net/sf/antcontrib/antcontrib.properties"/> -->

   <description>
        mfu build file
    </description>
 <!-- 
 ant deploy : create a package tar.gz ) including dojo + mfu  and upload everything on a remote server
 Mandatory parameters (from ant command line) :
 	-Dmfu.version=A
	-Dsite.user=C
	-Dsite.password=D 
 
 ant site : generate sphinx website
 Mandatory parameters (from ant command line)  :
 	-Dmfu.version=A
 
 ant site:deploy : generate sphinx website and deploy it remotly
 Mandatory parameters (from ant command line) :
 	-Dmfu.version=A
	-Dsite.user=C
	-Dsite.password=D 
 
 generate and deploy everything on the remote server :
  => ant deploy site:deploy -Dmfu.version=A -Dsite.host=B -Dsite.user=C -Dsite.password=D
  
 generate demo
 => ant demo
 
 generate demo and upload everything :
 ant deploy site:deploy demo:deploy 
-->
 
  <!-- set site credential --> 
  <property name="site.host"  value="sirika.com" />
  <property name="site.user"  value="${user}" />
  <property name="site.password"  value="${password}" />
 
  <!-- target folder for generated site as well as mfu release -->
  <property name="target.dir" value="${basedir}/target" />
 
   <!-- set dojo variable dir-->  
  <property name="dojo.version"  value="dojo-release-1.5.0rc1-src" />
  <property name="dojo.dir"  location="./${dojo.version}/" />
  <property name="dojo.buildscript.path" location="${dojo.dir}/util/buildscripts" /> 

  <!-- mfu module aliases as well as mfu variable- -->
   <property name="mfuiddd" value="mfu-including-dijit-dojox-dependencies" />
   <property name="mfude" value="mfu-dojo-embedded" />
   <property name="mfu.version" value="${mfu.version}" />
   <property name="mfu.target.dir" value="${target.dir}/mfu-${mfu.version}" />
   <property name="mfu.samples.dir" value="${mfu.target.dir}/samples" />
   <property name="mfu.remote.dir" value="/srv/http/developers.sirika.com/mfu-downloads" />
 
   <property name="mfu-demo.target.dir" value="${target.dir}/mfu-demo" /> 
   <property name="mfu-demo.samples.dir" value="${mfu-demo.target.dir}/samples" />
   <property name="mfu-demo.remote.dir" value="/srv/http/developers.sirika.com/mfu-demo" />
   <property name="mfu-demo.name" value="mfu-demo" />


   <property name="sphinx.bin.dir" location="/usr/bin" />
   <property name="sphinx.target.dir" location="${target.dir}/sphinx" />
   
   <!-- set sphinx site remote dir-->  
   <property name="site.remote.dir" value="/srv/http/developers.sirika.com/mfu" />
 


    <!-- pymager package variable -->
	<property name="sample.pymager.host" value="localhost" />	
	<property name="sample.pymager.port" value="8000" />	
	<property name="sample.pymager.path" value="/pymager" />	
	<property name="sample.pymager.uploadTo" value="local_directory" />	
	<property name="sample.pymager.username" value="test" />	
	<property name="sample.pymager.password" value="test" />		
	
   <!-- PRODUCTION variable -->
	<property name="production.pymager.host" value="localhost" />	
	<property name="production.pymager.port" value="80" />	
	<property name="production.pymager.path" value="/pymager" />	
	<property name="production.pymager.uploadTo" value="pymager" />	
	<property name="production.pymager.username" value="test" />	
	<property name="production.pymager.password" value="test" />	
	
 <!-- ### The Magic begins here ###  -->  
	<import file="build-dojo.xml"/>
  	<import file="packaging-download.xml"/>
	<import file="packaging-demo.xml"/>
	<import file="site.xml"/>


  <target name="mfu-init">
	<delete dir="${mfu.target.dir}"/>
	<mkdir dir="${mfu.target.dir}" />
  </target>


  <target name="package" depends="mfu-init,build-mfu-dojo-embedded,build-mfu-including-dijit-dojox-dependencies, some-dijit-files-copy, mfu-src-copy,mfu-dojo-embedded-copy,mfu-including-dijit-dojox-dependencies-copy,dojo-copy, pymager-conf-copy,php-copy,replace-dojo-version-samples,replace-upload-conf,tar-release">
    <tstamp/>
  </target>

  <target name="demo" depends="mfu-prod-demo-init, some-dijit-files-copy-demo, mfu-src-copy-demo,mfu-dojo-embedded-copy-demo,mfu-including-dijit-dojox-dependencies-copy-demo,dojo-copy-demo, pymager-conf-copy-demo,php-copy-demo,replace-dojo-version-samples-demo,replace-upload-conf-demo, tar-release-demo">
    <tstamp/>
  </target>
    


  <target name="clean" description="clean up" >
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  
  
</project>
